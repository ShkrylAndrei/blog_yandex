package info.shkryl.array.tictactoe;

public class TicTacToe {

    private char[][] board; // –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ 3x3
    private char currentPlayer; // —Ç–µ–∫—É—â–∏–π –∏–≥—Ä–æ–∫: 'X' –∏–ª–∏ 'O'

    public TicTacToe() {
        board = new char[3][3];
        currentPlayer = 'X';
        initializeBoard();
    }

    private void initializeBoard() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                board[i][j] = ' ';
            }
        }
    }

    public void printBoard() {
        System.out.println();
        for (int i = 0; i < 3; i++) {
            System.out.print(" ");
            System.out.print(board[i][0]);
            System.out.print(" | ");
            System.out.print(board[i][1]);
            System.out.print(" | ");
            System.out.print(board[i][2]);
            System.out.println();

            if (i < 2) {
                System.out.println("-----------");
            }
        }
        System.out.println();
    }

    public boolean makeMove(int row, int col) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏ –ø–æ–ª—è
        if (row < 0 || row > 2 || col < 0 || col > 2) {
            System.out.println("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 2.");
            return false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤–æ–±–æ–¥–Ω–∞ –ª–∏ –∫–ª–µ—Ç–∫–∞
        if (board[row][col] != ' ') {
            System.out.println("–ö–ª–µ—Ç–∫–∞ –∑–∞–Ω—è—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é.");
            return false;
        }

        // –î–µ–ª–∞–µ–º —Ö–æ–¥
        board[row][col] = currentPlayer;
        return true;
    }

    public void makeComputerMove() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == ' ') {
                    board[i][j] = 'O';
                    System.out.println("–ö–æ–º–ø—å—é—Ç–µ—Ä –ø–æ—Ö–æ–¥–∏–ª –≤ (" + i + "," + j + ")");
                    return;
                }
            }
        }
    }

    public char checkWinner() {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ') {
                return board[i][0];
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
        for (int j = 0; j < 3; j++) {
            if (board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[0][j] != ' ') {
                return board[0][j];
            }
        }

        // –î–∏–∞–≥–æ–Ω–∞–ª–∏
        if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ') {
            return board[0][0];
        }
        if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != ' ') {
            return board[0][2];
        }

        return ' '; // –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    }

    public boolean isBoardFull() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == ' ') {
                    return false;
                }
            }
        }
        return true;
    }

    public void play() {
        java.util.Scanner scanner = new java.util.Scanner(System.in);
        System.out.println("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏!");
        System.out.println("–í—ã ‚Äî X, –∫–æ–º–ø—å—é—Ç–µ—Ä ‚Äî O");
        System.out.println("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –∏ —Å—Ç–æ–ª–±–µ—Ü (0-2)");

        while (true) {
            printBoard();
            // –•–æ–¥ –∏–≥—Ä–æ–∫–∞
            System.out.print("–í–∞—à —Ö–æ–¥ (—Å—Ç—Ä–æ–∫–∞ –∏ —Å—Ç–æ–ª–±–µ—Ü): ");
            int row = scanner.nextInt();
            int col = scanner.nextInt();

            if (!makeMove(row, col)) {
                continue; // –æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚Äî –ø–æ–≤—Ç–æ—Ä—è–µ–º
            }
            if (checkWinner() == 'X') {
                printBoard();
                System.out.println("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!");
                break;
            }
            if (isBoardFull()) {
                printBoard();
                System.out.println("ü§ù –ù–∏—á—å—è!");
                break;
            }
            // –•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
            makeComputerMove();

            if (checkWinner() == 'O') {
                printBoard();
                System.out.println("ü§ñ –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∏–≥—Ä–∞–ª!");
                break;
            }
            if (isBoardFull()) {
                printBoard();
                System.out.println("ü§ù –ù–∏—á—å—è!");
                break;
            }
        }
        scanner.close();
    }

    public static void main(String[] args) {
        TicTacToe game = new TicTacToe();
        game.play();
    }
}
