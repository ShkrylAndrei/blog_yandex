package info.shkryl.pattern.factoryMethod.creator;

import info.shkryl.pattern.factoryMethod.Airplane;

public abstract class Airline {

    // üè≠ –§–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ ‚Äî —Å–æ–∑–¥–∞—ë—Ç —Å–∞–º–æ–ª—ë—Ç
    protected abstract Airplane createAirplane();

    // –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    public final String bookTicket(String destination) {
        Airplane airplane = createAirplane(); // ‚Üê –°–æ–∑–¥–∞—ë–º —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥
        airplane.fly(); // ‚Üê –õ–µ—Ç–∏–º!
        return "–ë–∏–ª–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Ä–µ–π—Å –≤ " + destination + " —Å –∫–æ–º–ø–∞–Ω–∏–µ–π " + this.getClass().getSimpleName();
    }
}
